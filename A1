第一案
----------------------------------------------------------------------------
#include <stdio.h>
int main(void){
    int sw,sub,i,m,n;
    int sum = 0; //全部勝った場合の合計の指の本数
    int gu = 0; //グーを出した回数
    int ti = 0; //チョキを出した回数
    int pa = 0; //パーを出した回数
    char ary[1000];
    scanf("%d %d",&m,&n);
    scanf("%s",ary);
    for(i = 0;i < m;i++) {
        if(ary[i] == 'G'){
            sum = sum + 5;
            pa = pa + 1;
        } else if(ary[i] == 'P') {
            sum = sum + 2;
            ti = ti + 1;
        } else {
           gu = gu + 1;
        }
    }
    sub = n - sum; //全部勝った場合と合計の指の本数の予定との差を求める
    if(sub > 0){
        //差が9本以下になるまではパーを増やしていくだけでいい
        if(sub > 9) {
            while(sub > 9){
                
            }
        }
        //9本以下の差はパターンによって分かれるためswitch分で調整する
        switch(sub) {
            case 9: //もし9本分足りないなら
                m = m - 3; // グー3つをチョキ2つとパー1つにするパターン(-0+4+5)とチョキ3つをパー3つにするパターン(-6+15)しかないため勝ち数を3減らしてあげればよい
                break;
            case 8: //もし8本分足りないなら
                if(ti == 0){
                    m = m - 4; //チョキが1つもないならグー4つをチョキ4つに変えるしかない(-0+8)
                } else if(gu >= 1){ 
                    m = m - 2; //チョキとグーが1つ以上あるならチョキ1つとグー1つをパー2つに変える(-0-2+10)
                } else if(sw >= 2){
                    m = m - 4; //グーが1つもないならチョキ6つをパー4つとグー2つに変える(-12+0+20)。この時すでに2つのグーをパーに変えていた場合勝ち数は2減らさなくてもよい。
                } else if(sw == 1){
                    m = m - 5;
                } else {
                    m = m - 6;
                }
                break;
            case 7: //もし7本分なら
                if(gu >= 2){
                    m = m - 2; //グーが2つ以上あるならチョキとパーに変える(-0+2+5)
                } else {
                    if(sw > 0){
                        m = m - 3; //グーが1つしかない場合はチョキ4つをパー3つとグー1つに変える(-8+0+15)。この時すでにグーからパーに変えていた場合は勝ち数は1減らさなくてもよい。
                    } else {
                        m = m - 4;
                    }
                }
                break;
            case 6: //もし6本分なら
                if(ti >= 2){
                    m = m - 2; //チョキが2つ以上あるならばパー2つに変える(-4+10)
                } else {
                    m = m - 3; //チョキが2つ無いならばグー3つをチョキに変えるしかない(-0+6)
                }
                break;
            case 5: //もし5本分なら
                if(gu >= 1){
                    m = m - 1; //グーがひとつでもあればパーに変える(-0+5)
                } else if (sw >= 2){
                    m = m - 3; //グーがひとつもなければチョキ5つをグー2つとパー3つに変える(-10+0+15)。この時すでに2つのグーをパーに変えていた場合勝ち数は2減らさなくてもよい。
                } else if (sw == 1){
                    m = m - 4; //
                } else {
                    m = m - 5;
                }
                break;
            case 4: //もし4本分なら。ここからはn-sumが4以下になった場合しかありえないのですでにグーをパーにしている状況は発生しない。
                if(gu >= 2){
                    m = m - 2; //グーが2つ以上あるならばグー2つをチョキ2つに変えればよい(-0+4)
                } else {
                    m = m - 3; //グーが2つ以上ないならばチョキ3つをグー1つとパー2つに変えるしかない(-6+0+10)
                }
                break;
            case 3: //もし3本分なら
                if(ti >= 1){
                    m = m - 1; //チョキが1つでもあるならばパー1つに変えればよい(-2+5)
                } else {
                    m = m - 5; //チョキが1つもないならばパー1つとグー3つをチョキ4つに変えればよい(-5-0+8)
                }
                break;
            case 2: //もし2本分なら
                if(gu >= 1){
                    m = m - 1; //グーが1つでもあるならばチョキ1つに変えればよい(-0+2)
                } else {
                    m = m - 4; //グーが1つもないならばチョキ4つをグー2つとパー2つに変えればよい(-8+0+10)
                }
                break;
            case 1: //もし1本なら
                if(ti >= 2){
                    m = m - 2; //チョキが2つ以上あるならばチョキ2つをグー1つとパー1つに変えればよい(-4+0+5)
                } else {
                    m = m - 3; //チョキが2つ以上ないならばパー1つとグー2つをチョキ3つに変えればよい(-5-0+6)
                }
                break;
        }
    } else if(sub < 0) {
        
    }
    printf("%d\n",m);
    return 0;
}
--------------------------------------------------------------------------
ものすごく長い。ただ流れに沿って処理する方法ではなく数学的な方法があるはず？
